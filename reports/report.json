{
  "stats": {
    "suites": 1,
    "tests": 14,
    "passes": 13,
    "pending": 0,
    "failures": 1,
    "start": "2023-01-02T18:27:02.581Z",
    "end": "2023-01-02T18:27:16.809Z",
    "duration": 14076,
    "testsRegistered": 14,
    "passPercent": 92.85714285714286,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ff44b3cf-a628-4c6b-b286-ce9354c7d624",
      "title": "",
      "fullFile": "cypress/integration/jsEmployeesTableDOM.spec.js",
      "file": "cypress/integration/jsEmployeesTableDOM.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
          "title": "Employees table",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort by name ASC",
              "fullTitle": "Employees table should sort by name ASC",
              "timedOut": null,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').click();\ncy.checkValuesSorted('Name', 'ASC');",
              "err": {},
              "uuid": "227cd40b-c739-4d0e-905d-2f475fb5ca2b",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by name DESC",
              "fullTitle": "Employees table should sort by name DESC",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Name').dblclick();\ncy.checkValuesSorted('Name', 'DESC');",
              "err": {},
              "uuid": "722c1ce9-63d9-4704-ae58-19d942005394",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age ASC",
              "fullTitle": "Employees table should sort by age ASC",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').click();\ncy.checkValuesSorted('Age', 'ASC');",
              "err": {},
              "uuid": "d0b6abe9-6cf4-4351-b71f-7b6a01c5102a",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by age DESC",
              "fullTitle": "Employees table should sort by age DESC",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Age').dblclick();\ncy.checkValuesSorted('Age', 'DESC');",
              "err": {},
              "uuid": "9e5cbdd6-96da-4bb4-9e81-f90a588686cf",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary ASC",
              "fullTitle": "Employees table should sort by salary ASC",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').click();\ncy.checkValuesSorted('Salary', 'ASC');",
              "err": {},
              "uuid": "8318f8ab-a9e0-4962-a99c-e31147e14ca0",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort by salary DESC",
              "fullTitle": "Employees table should sort by salary DESC",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Salary').dblclick();\ncy.checkValuesSorted('Salary', 'DESC');",
              "err": {},
              "uuid": "e8502469-dfed-498a-a88c-354418054cb2",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting ASC",
              "fullTitle": "Employees table should have proper values in rows after the sorting ASC",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').click();\ncy.compareRowValuesAfterSort('Airi Satou', ['Airi Satou', 'Accountant', 'Tokyo', '33', '$162,700']);",
              "err": {},
              "uuid": "0dab9ecd-9aa4-4421-bc04-6866fd526e25",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper values in rows after the sorting DESC",
              "fullTitle": "Employees table should have proper values in rows after the sorting DESC",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('th').contains('Name').dblclick();\ncy.compareRowValuesAfterSort('Zorita Serrano', ['Zorita Serrano', 'Software Engineer', 'San Francisco', '56', '$115,000']);",
              "err": {},
              "uuid": "77252734-4d75-4cfe-8f59-6e6beeaaecbe",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "row should have class active after click",
              "fullTitle": "Employees table row should have class active after click",
              "timedOut": null,
              "duration": 185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.contains('Airi Satou').parent().should('not.have.class', 'active');\ncy.contains('Airi Satou').click();\ncy.contains('Airi Satou').parent().should('have.class', 'active');",
              "err": {},
              "uuid": "a2d6ffc7-cf1d-4b23-b6ba-72d29a21b09c",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to add a new employee",
              "fullTitle": "Employees table should be able to add a new employee",
              "timedOut": null,
              "duration": 6060,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'success');\ncy.compareRowValuesAfterSort('Adam', ['Adam', 'QA Engineer', 'San Francisco', '18', '$50,000']);",
              "err": {
                "message": "AssertionError: Timed out retrying: expected '$50,000,000' to equal '$50,000'",
                "estack": "AssertionError: Timed out retrying: expected '$50,000,000' to equal '$50,000'\n    at Context.eval (http://localhost:8080/__cypress/tests?p=cypress/integration/jsEmployeesTableDOM.spec.js:248:46)",
                "diff": "- '$50,000,000'\n+ '$50,000'\n"
              },
              "uuid": "0d18a154-a5c5-4deb-95ea-d2d036c633d7",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on name field\n   with invalid input",
              "fullTitle": "Employees table should have warning notification on name field\n   with invalid input",
              "timedOut": null,
              "duration": 1585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Ada', 'QA Engineer', 'San Francisco', 18, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Ada', 50000);",
              "err": {},
              "uuid": "bb216544-b187-42b8-90b5-1336cdc08c62",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on position \n  field with invalid input",
              "fullTitle": "Employees table should have warning notification on position \n  field with invalid input",
              "timedOut": null,
              "duration": 1055,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-qa=\"name\"]').type('Adam');\ncy.get('[data-qa=\"office\"]').select('San Francisco');\ncy.get('[data-qa=\"age\"]').type('18{enter}');\ncy.get('[data-qa=\"salary\"]').type('50000{enter}');\ncy.get('button').contains('Save to table').click();\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "20401059-28a9-4346-a99a-22d78eb15351",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age less than 18",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age less than 18",
              "timedOut": null,
              "duration": 1573,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 17, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "6c0d0bdf-7b8c-424b-9dff-c9d107f8c2bd",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have warning notification on age field\n   if the age bigger than 90",
              "fullTitle": "Employees table should have warning notification on age field\n   if the age bigger than 90",
              "timedOut": null,
              "duration": 1580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fillNewEmployeeForm('Adam', 'QA Engineer', 'San Francisco', 91, 50000);\ncy.get('[data-qa=\"notification\"]').should('have.class', 'error');\ncy.checkDataDoesntExist('Adam', 50000);",
              "err": {},
              "uuid": "c3e20b2f-5ae4-4b20-97fe-ccd975647f21",
              "parentUUID": "bf35bea7-179f-4b15-a0bf-625357bc60c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "227cd40b-c739-4d0e-905d-2f475fb5ca2b",
            "722c1ce9-63d9-4704-ae58-19d942005394",
            "d0b6abe9-6cf4-4351-b71f-7b6a01c5102a",
            "9e5cbdd6-96da-4bb4-9e81-f90a588686cf",
            "8318f8ab-a9e0-4962-a99c-e31147e14ca0",
            "e8502469-dfed-498a-a88c-354418054cb2",
            "0dab9ecd-9aa4-4421-bc04-6866fd526e25",
            "77252734-4d75-4cfe-8f59-6e6beeaaecbe",
            "a2d6ffc7-cf1d-4b23-b6ba-72d29a21b09c",
            "bb216544-b187-42b8-90b5-1336cdc08c62",
            "20401059-28a9-4346-a99a-22d78eb15351",
            "6c0d0bdf-7b8c-424b-9dff-c9d107f8c2bd",
            "c3e20b2f-5ae4-4b20-97fe-ccd975647f21"
          ],
          "failures": [
            "0d18a154-a5c5-4deb-95ea-d2d036c633d7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14076,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "reportDir": "raw_reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}